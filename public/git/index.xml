<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on </title>
    <link>/git/index.html</link>
    <description>Recent content in Git on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git Commands</title>
      <link>/git/git-commands/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/git/git-commands/index.html</guid>
      <description>Basic git init Initialise a Git repository in the current working directory. This is the first command you run when started a Git repo.
git status Show the status of the current git repository (changes not staged, committed or pushed, current branch).
git add &amp;lt;new-file&amp;gt; Add file to the index, referred to as a &amp;ldquo;staging area&amp;rdquo;. A new file in the working directory will be &amp;ldquo;untracked&amp;rdquo; before it is added.</description>
    </item>
    <item>
      <title>Git Glossary</title>
      <link>/git/git-glossary/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/git/git-glossary/index.html</guid>
      <description>Branches Branches allow you to work on multiple tasks at the same time. In Git you are always working on a branch. In a typical workflow, some branches are treated as &amp;ldquo;integration&amp;rdquo; branches to collect the work done in other branches. In contrast, day-to-day work is done in &amp;ldquo;feature&amp;rdquo; branches.
Commits When you make a commit, Git creates a copy of the files in the index and stores them in the object database.</description>
    </item>
    <item>
      <title>Git Tips</title>
      <link>/git/git-tips/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/git/git-tips/index.html</guid>
      <description>Keep commits focused on a discrete task To aid development and to ensure that commit messages are concise, it is strongly recommended that each commit is contained to a single issue, such as fixing a bug or implementing something distinct. Refer to the commit message conventions for further information.
Merging in collaborative projects should be done in Github via pull When merging changes into main/master, you should do this via Github instead of merging remotely and pushing the commit to remote.</description>
    </item>
  </channel>
</rss>